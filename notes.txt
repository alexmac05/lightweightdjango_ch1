Notes for the book LightweightDjango

notes.txt from Chapter one <br/>

Chapter one is about making a small django project. A lightweight django project. <br/>

startproject creates new directories and files. <br/>

Step One: Create the view ( sends data to the presentation layer ) to serve the root URL <br/>
Step Two: Create the proper settings for the minimalist helloworld project <br/>
Debug and secret key are likely to change between dev, staging, and prod <br/>

Step Three: Create url patterns to serve up the view <br/>



<br/>
MTV - Model-Template-View <br/>
Django's architecture <br/>

WSGI - Web Server Gateway Interface - the specification for how web servers interact with application frameworks <br/>

os.getenv(key, default=None)


Links to read <br/>
https://docs.djangoproject.com/en/1.8/topics/signing/ <br/>
http://docs.gunicorn.org/en/19.1/ <br/>
https://docs.djangoproject.com/en/1.8/ref/settings/ <br/>
https://code.djangoproject.com/wiki/SplitSettings <br/>
https://djangopackages.org/grids/g/configuration/ <br/>
https://12factor.net/ <br/>
https://docs.python.org/3/library/os.html#os.environ <br/>
https://docs.djangoproject.com/en/1.8/ref/settings/#allowed-hosts <br/>


notes.txt from Chapter two <br/>
Stateless Web Application  <br/>

Input validation, caching, templates  <br/>
Cookies are used to tie requests from the same session together  <br/>

Reusable apps vs. composable services  <br/>

Example: Placeholder Image Server  <br/>
A typical placeholder image server will take information from the URL like size, color, text to display with image  <br/>

Step One: <br/>
django-admin.py startproject placeholder --template=project_name<br/>

python placeholder.py runserver<br/>

Questions: Startproject did not create a secret key like the book said it would do. Worth exploring why and could cause issues later <br />





